# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

env:
  WXWIDGETS_VER: 3.2.6

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          cmake build-essential libssl-dev gettext git pkg-config lsb-release \
          libgtk-3-dev libcurl4-openssl-dev libwebkit2gtk-4.1-dev wget 

      - name: Restore wxWidgets from Cache
        id: restore-cache-wxWidgets
        uses: actions/cache/restore@v4
        with:
          path: ~/wxWidgets-${{env.WXWIDGETS_VER}}
          key: ${{runner.os}}-wxWidgets-${{env.WXWIDGETS_VER}}

      - name: Build wxWidgets
        if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
        run: |
          cd ~
          wget https://github.com/wxWidgets/wxWidgets/releases/download/v${{env.WXWIDGETS_VER}}/wxWidgets-${{env.WXWIDGETS_VER}}.tar.bz2
          tar -xjf wxWidgets-${{env.WXWIDGETS_VER}}.tar.bz2
          cd wxWidgets-${{env.WXWIDGETS_VER}}
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DwxBUILD_SHARED=OFF -DwxUSE_STL=ON
          cmake --build build

      - name: Install wxWidgets
        run: |
          cd ~/wxWidgets-${{env.WXWIDGETS_VER}}
          sudo cmake --build build --target install

      - name: Save wxWidgets to Cache
        if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
        id: save-cache-wxWidgets
        uses: actions/cache/save@v4
        with:
          path: ~/wxWidgets-${{env.WXWIDGETS_VER}}
          key: ${{runner.os}}-wxWidgets-${{env.WXWIDGETS_VER}}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build oxcalfrp
        run: |
          cd $GITHUB_WORKSPACE
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target package
          cmake --install build --prefix AppDir
          curl -LO https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          curl -LO https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gtk/master/linuxdeploy-plugin-gtk.sh
          chmod +x linuxdeploy-x86_64.AppImage linuxdeploy-plugin-gtk.sh
          DEPLOY_GTK_VERSION=3
          ./linuxdeploy-x86_64.AppImage --appdir $(pwd)/AppDir --plugin gtk --output appimage
          mv ./build/oxcalfrp*.AppImage $(echo ./build/oxcalfrp*.deb | sed 's/deb/AppImage/')
          ll
