name: Build

on:
  workflow_dispatch:

env:
  WXWIDGETS_VER: 3.2.7

jobs:

  build-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          cmake build-essential libssl-dev gettext git pkg-config lsb-release \
          libgtk-3-dev libcurl4-openssl-dev libwebkit2gtk-4.1-dev wget

      - uses: kenchan0130/actions-system-info@master
        id: system-info

      - name: Restore wxWidgets from Cache
        id: restore-cache-wxWidgets
        uses: actions/cache/restore@v4
        with:
          path: ~/wxWidgets-${{env.WXWIDGETS_VER}}
          key: ${{ runner.os }}-${{ steps.system-info.outputs.name }}-${{ steps.system-info.outputs.release }}-wxWidgets-${{ env.WXWIDGETS_VER }}

      - name: Build wxWidgets
        if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
        run: |
          cd ~
          wget https://github.com/wxWidgets/wxWidgets/releases/download/v${{env.WXWIDGETS_VER}}/wxWidgets-${{env.WXWIDGETS_VER}}.tar.bz2
          tar -xjf wxWidgets-${{env.WXWIDGETS_VER}}.tar.bz2
          cd wxWidgets-${{env.WXWIDGETS_VER}}
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DwxBUILD_SHARED=OFF -DwxUSE_STL=ON -DwxBUILD_PRECOMP=OFF
          cmake --build build

      - name: Install wxWidgets
        run: |
          cd ~/wxWidgets-${{env.WXWIDGETS_VER}}
          sudo cmake --build build --target install

      - name: Save wxWidgets to Cache
        if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
        id: save-cache-wxWidgets
        uses: actions/cache/save@v4
        with:
          path: ~/wxWidgets-${{env.WXWIDGETS_VER}}
          key: ${{ runner.os }}-${{ steps.system-info.outputs.name }}-${{ steps.system-info.outputs.release }}-wxWidgets-${{ env.WXWIDGETS_VER }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build oxcalfrp
        id: oxcalfrp-build
        run: |
          cd $GITHUB_WORKSPACE
          # next line needs only for build AppImage artifact
          # cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 
          cmake --build build --target package
          cd build
          echo "deb_artifact_name=$(ls oxc*.deb)" >> $GITHUB_OUTPUT
          # next lines needs only for build AppImage artifact
          # make install DESTDIR=AppDir
          # touch oxcalfrp.desktop
          # echo -e "[Desktop Entry]\nType=Application\nName=oxcalfrp\nGenericName=Orthodox Calendar frp\nIcon=oxcalfrp\nTerminal=false\nCategories=Science\nExec=oxcalfrp\n" > oxcalfrp.desktop
          # mkdir -p $(pwd)/AppDir/usr/share/applications && mv oxcalfrp.desktop $_
          # cp ../resources/ICXC_NIKA.png ./oxcalfrp.png
          # curl -LO https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          # curl -LO https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gtk/master/linuxdeploy-plugin-gtk.sh
          # chmod +x linuxdeploy-x86_64.AppImage linuxdeploy-plugin-gtk.sh 
          # export DEPLOY_GTK_VERSION=3
          # ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin gtk --output appimage -i oxcalfrp.png
          # mv $(pwd)/oxc*.AppImage $(echo $(pwd)/oxc*.deb | sed 's/deb/AppImage/')
          # echo "appimage_artifact_name=$(ls oxc*.AppImage)" >> $GITHUB_OUTPUT

      - name: Upload DEB Package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.oxcalfrp-build.outputs.deb_artifact_name }}
          path: build/${{ steps.oxcalfrp-build.outputs.deb_artifact_name }}
          compression-level: 0

      # - name: Upload AppImage Package
        # uses: actions/upload-artifact@v4
        # with:
          # name: ${{ steps.oxcalfrp-build.outputs.appimage_artifact_name }}
          # path: build/oxc*.AppImage
          # compression-level: 0


  build-rpm:
    runs-on: ubuntu-latest
    container: 
      image: almalinux:latest

    steps:
    - name: Install Dependencies
      run: |
        dnf -y upgrade
        dnf -y groupinstall "Development Tools"
        dnf -y install cmake wget openssl-devel gtk3-devel libcurl-devel webkit2gtk3-devel

    - uses: kenchan0130/actions-system-info@master
      id: system-info

    - name: Restore wxWidgets from Cache
      id: restore-cache-wxWidgets
      uses: actions/cache/restore@v4
      with:
        path: ~/wxWidgets-${{env.WXWIDGETS_VER}}
        key: ${{ runner.os }}-${{ steps.system-info.outputs.name }}-${{ steps.system-info.outputs.release }}-wxWidgets-${{ env.WXWIDGETS_VER }}

    - name: Build wxWidgets
      if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
      run: |
        cd ~
        wget https://github.com/wxWidgets/wxWidgets/releases/download/v${{env.WXWIDGETS_VER}}/wxWidgets-${{env.WXWIDGETS_VER}}.tar.bz2
        tar -xjf wxWidgets-${{env.WXWIDGETS_VER}}.tar.bz2
        cd wxWidgets-${{env.WXWIDGETS_VER}}
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DwxBUILD_SHARED=OFF -DwxUSE_STL=ON -DwxBUILD_PRECOMP=OFF
        cmake --build build

    - name: Install wxWidgets
      run: |
        cd ~/wxWidgets-${{env.WXWIDGETS_VER}}
        cmake --build build --target install

    - name: Save wxWidgets to Cache
      if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
      id: save-cache-wxWidgets
      uses: actions/cache/save@v4
      with:
        path: ~/wxWidgets-${{env.WXWIDGETS_VER}}
        key: ${{ runner.os }}-${{ steps.system-info.outputs.name }}-${{ steps.system-info.outputs.release }}-wxWidgets-${{ env.WXWIDGETS_VER }}

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Build oxcalfrp
      id: oxcalfrp-build
      run: |
        cd $GITHUB_WORKSPACE
        git config --global --add safe.directory '*'
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DPACKAGE_TYPE_FOR_LINUX=RPM
        cmake --build build --target package
        cd build
        echo "rpm_artifact_name=$(ls oxc*.rpm)" >> $GITHUB_OUTPUT

    - name: Upload RPM Package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.oxcalfrp-build.outputs.rpm_artifact_name }}
        path: build/${{ steps.oxcalfrp-build.outputs.rpm_artifact_name }}
        compression-level: 0


  build-win32:
    runs-on: windows-latest

    steps:
    - uses: kenchan0130/actions-system-info@master
      id: system-info

    - name: Install Dependencies
      run: |
        rm -r -Force C:\mingw64
        cd C:\
        iwr -outf mingw.zip https://github.com/brechtsanders/winlibs_mingw/releases/download/14.2.0posix-19.1.7-12.0.0-msvcrt-r3/winlibs-i686-posix-dwarf-gcc-14.2.0-mingw-w64msvcrt-12.0.0-r3.zip
        unzip -o mingw.zip
        Rename-Item C:\mingw32 mingw64
        
    - name: Restore wxWidgets from Cache
      id: restore-cache-wxWidgets
      uses: actions/cache/restore@v4
      with:
        path: C:\wxWidgets-${{env.WXWIDGETS_VER}}
        key: ${{ runner.os }}-${{ steps.system-info.outputs.name }}-${{ steps.system-info.outputs.release }}-wxWidgets-${{ env.WXWIDGETS_VER }}

    - name: Build wxWidgets
      if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
      run: |
        mkdir C:\wxWidgets-${{env.WXWIDGETS_VER}}
        cd C:\wxWidgets-${{env.WXWIDGETS_VER}}
        iwr -outf wxWidgets-${{env.WXWIDGETS_VER}}.zip https://github.com/wxWidgets/wxWidgets/releases/download/v${{env.WXWIDGETS_VER}}/wxWidgets-${{env.WXWIDGETS_VER}}.zip
        unzip wxWidgets-${{env.WXWIDGETS_VER}}.zip
        cmake -G "MinGW Makefiles" -S . -B build -DCMAKE_BUILD_TYPE=Release -DwxBUILD_SHARED=OFF -DwxUSE_STL=ON -DwxBUILD_PRECOMP=OFF
        cmake --build build

    - name: Install wxWidgets
      run: |
        cd C:\wxWidgets-${{env.WXWIDGETS_VER}}\build
        mingw32-make.exe install

    - name: Save wxWidgets to Cache
      if: steps.restore-cache-wxWidgets.outputs.cache-hit != 'true'
      id: save-cache-wxWidgets
      uses: actions/cache/save@v4
      with:
        path: C:\wxWidgets-${{env.WXWIDGETS_VER}}
        key: ${{ runner.os }}-${{ steps.system-info.outputs.name }}-${{ steps.system-info.outputs.release }}-wxWidgets-${{ env.WXWIDGETS_VER }}

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Build oxcalfrp
      id: oxcalfrp-build
      run: |
        cmake -G "MinGW Makefiles" -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TLS_VERIFY=OFF
        cmake --build build --target package

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows_portable
        path: build\oxc*.exe
        compression-level: 0
        
